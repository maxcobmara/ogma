["Rak Terbuka", "Bilik Rujukan", "Rujukan", "Rak Terbuka ", nil, "KRJB ", "33.95", "", "Rak Terbula ", "LUPUS"]



annotate --routes --position after --sort
annotate --position after --sort --force -e tests,fixtures,factories

rspec --format documentation

psql -U postgres -d icms_kskb_development


Annotated (99): AcademicSession, Accession, AddressBook, Answerchoice, Asset, AssetDefect, AssetDisposal, AssetLoan, AssetLoss, AssetPlacement, Assetcategory, AttachmentUploader, Attendance,

Bank, Bankaccount, Book, Booleananswer, Booleanchoice, Bulletin,

Circulation, Cofile,
Document,
Employgrade, Evactivity, EvaluateCourse, Event, Exam, ExamTemplate, Examanalysis, Examanswer, Exammark, Examquestion, Examresult, Examtemplate,

Fingerprint,
Grade, Group,
Holiday,
Intake,
Kin,

Leaveforstaff, Leaveforstudent, LessonPlan, LessonPlanTrainingnote, LessonplanMethodology, Librarytransaction, Loan, Location, LocationDamage, Login,

Maint, Mark, Mycpd, Page, Position, Postinfo, Programme, Ptbudget, Ptcourse, Ptdo, Ptschedule, Qualification, Resultline, Role, Score, ShiftHistory, Shortessay, Spmresult, Staff, StaffAppraisal, StaffAppraisalSkt, StaffAttendance, StaffGrade, StaffShift, Stationery, StationeryAdd, StationeryUse, Student, StudentAttendance, StudentCounselingSession, StudentDisciplineCase, Tenant, Timetable, TimetablePeriod, Title, Topicdetail, Trainingnote, Trainneed, TravelClaim, TravelClaimAllowance, TravelClaimLog, TravelClaimMileageRate, TravelClaimReceipt, TravelClaimsTransportGroup, TravelRequest, User, Vehicle, Weeklytimetable, WeeklytimetableDetail



bundle exec rake db:seed:dump MODELS=Fingerprint FILE=db/data/Fingerprint.rb EXCLUDE=[]

bundle exec rake db:seed:dump MODELS=Grade FILE=db/data/Grade.rb EXCLUDE=[]
bundle exec rake db:seed:dump MODELS=Group FILE=db/data/Group.rb EXCLUDE=[]

bundle exec rake db:seed:dump MODELS=Holiday FILE=db/data/Holiday.rb EXCLUDE=[]

bundle exec rake db:seed:dump MODELS=Intake FILE=db/data/Intake.rb EXCLUDE=[]

bundle exec rake db:seed:dump MODELS=Kin FILE=db/data/Kin.rb EXCLUDE=[]

bundle exec rake db:seed:dump MODELS=Leaveforstaff FILE=db/data/Leaveforstaff.rb EXCLUDE=[]
bundle exec rake db:seed:dump MODELS=Leaveforstudent FILE=db/data/Leaveforstudent.rb EXCLUDE=[]
bundle exec rake db:seed:dump MODELS=LessonPlan FILE=db/data/LessonPlan.rb EXCLUDE=[]
bundle exec rake db:seed:dump MODELS=LessonPlanTrainingnote FILE=db/data/LessonPlanTrainingnote.rb EXCLUDE=[]
bundle exec rake db:seed:dump MODELS=LessonplanMethodology FILE=db/data/LessonplanMethodology.rb EXCLUDE=[]
bundle exec rake db:seed:dump MODELS=Librarytransaction FILE=db/data/Librarytransaction.rb EXCLUDE=[]
bundle exec rake db:seed:dump MODELS=Loan FILE=db/data/Loan.rb EXCLUDE=[]
bundle exec rake db:seed:dump MODELS=Location FILE=db/data/Location.rb EXCLUDE=[]
bundle exec rake db:seed:dump MODELS=LocationDamage FILE=db/data/LocationDamage.rb EXCLUDE=[]
bundle exec rake db:seed:dump MODELS=Login FILE=db/data/Login.rb EXCLUDE=[]


bundle exec rake db:seed:dump MODELS=Examtemplate FILE=db/data/Examtemplate.rb EXCLUDE=[]



Circulation



Fix ID
-------
psql -U postgres -d navy_development
SELECT MAX(id) FROM vehicle_categories;
SELECT nextval('vehicle_categories_id_seq');
SELECT setval('vehicle_categories_id_seq', (SELECT MAX(id) FROM vehicle_categories));


SELECT l.name as name, pl.name as parent,
COUNT(l.id) as total
FROM locations l
LEFT JOIN locations pl on pl.id=l.parent_id
GROUP BY parent
ORDER BY parent;

COUNT(CASE WHEN p.staff_id IS NOT NULL THEN 1 ELSE NULL END) as diisi,
COUNT(CASE WHEN (p.staff_id IS NULL) THEN 1 ELSE NULL END) as kosong
LEFT OUTER JOIN partners w ON w.id=c.parent_id



SELECT id
FROM tenants
WHERE keyreturned IS null
AND force_vacate = false;

.where("tenants.keyreturned IS ? AND tenants.force_vacate = ?", nil, false


SELECT p.name, e.name as staffgrade,
COUNT(p.id) as total,
COUNT(CASE WHEN p.staff_id IS NOT NULL THEN 1 ELSE NULL END) as diisi,
COUNT(CASE WHEN (p.staff_id IS NULL) THEN 1 ELSE NULL END) as kosong
FROM positions p
LEFT JOIN employgrades e on e.id=p.staffgrade_id
GROUP BY p.name, staffgrade
ORDER BY p.name;


SELECT s.name, s.coemail, b.title
FROM librarytransactions lt
LEFT JOIN staffs s on s.id=lt.staff_id
LEFT JOIN accessions a on a.id=lt.accession_id
LEFT OUTER JOIN books b on b.id=a.book_id
WHERE lt.returned IS NULL
AND s.coemail IS NOT NULL
AND lt.returnduedate < current_date
GROUP BY s.name, s.coemail, b.title;


 @female_occupied = floor.descendants.where('typename = ?', 2).order(code: :asc).joins(:tenants).where("tenants.id" => @current_tenants)
@female =          floor.descendants.where('typename = ? AND id NOT IN (?)', 2, @occupied_locations).order(code: :asc)

@current_tenants = Tenant.where("keyreturned IS ? AND force_vacate != ?", nil, true)

SELECT COUNT(id)
FROM locations
WHERE typename = 2;

SELECT id
FROM tenants
WHERE keyreturned = null
AND force_vacate <> true;


Just get ids and emails
then get book titles

SELECT lt.staff_id, s.coemail
FROM librarytransactions lt
LEFT JOIN staffs s on s.id=lt.staff_id
WHERE lt.returned IS NULL
AND s.coemail IS NOT NULL
AND lt.returnduedate < current_date
GROUP BY lt.staff_id, s.coemail;

SELECT b.title
FROM librarytransactions lt
LEFT JOIN accessions a on a.id=lt.accession_id
LEFT OUTER JOIN books b on b.id=a.book_id
WHERE lt.returned IS NULL
AND lt.staff_id
AND lt.returnduedate < current_date
GROUP BY s.name, s.coemail, b.title;








=======


=======



<!-- Box -->
<div class="box">
	<!-- Box Head -->
	<div class="box-head">
		<h2 class="left"><%= t 'staff.list' %></h2>
		<div class="right">
			<% form_tag staffs_path, :method => 'get' do %>
			<%= text_field_tag :search, params[:search], :placeholder => "MyKadNo, Name"  %>
			<%= submit_tag I18n.t('search'), :icno => nil %>
			<% end %>
		</div>
  </div>
</div>

<div class="indextable">
	<table>
  	<tr>
			<th><%= sortable "icno", (t 'staff.icno') %></th>
			<th><%= sortable "name", (t 'staff.name') %></th>
      <th><%= t 'staff.position' %></th>
      <th colspan=4 class="ac"><%= t 'control' %></th>
  	</tr>
		<% @staff_filtered.each do |staff| %>
    <tr>
    	<td><%=h staff.formatted_mykad %></td>
      <td><%=h staff.name %></td>
      <td><%=h staff.position.blank? ? "-" : staff.position.name %></td>
      <td width=10px><%= link_to image_tag("document.png", :border => 0, :title => 'Show'), :action => 'show', :id => staff %></td>
      <td width=10px><%= link_to image_tag("edit.png", :border => 0, :title => 'Edit'), :action => 'edit', :id => staff %></td>
      <!--<#% if permitted_to? :destroy, @staff%>-->
      <td width=10px><%= link_to image_tag("delete.png", :border => 0, :title => 'Delete'), staff, :confirm => 'Are you sure?', :method => :delete %></td>
      <!--<#% end %>-->
      <td width=10px><%= link_to image_tag("printer.png", :border => 0, :title => 'Borang Maklumat Staf'), :action => 'borang_maklumat_staff', :id => staff %></td>
    </tr>
    <% end %>
	</table>
</div>

<br />
<%# if permitted_to? :create, @staff%>
<%= link_to (t 'staff.create'), new_staff_path %>
<%# end %>
<br />


        %td{:width => "10px"}= link_to fa_icon "file", :border => 0, :title => 'Show', :action => 'show', :id => staff
        %td{:width => "10px"}= link_to fa_icon("pencil-square", :border => 0, :title => 'Edit'), :action => 'edit', :id => staff
        %td{:width => "10px"}= link_to fa_icon("trash-o", :border => 0, :title => 'Delete'), staff, :confirm => 'Are you sure?', :method => :delete
        %td{:width => "10px"}= link_to fa_icon("print", :border => 0, :title => 'Borang Maklumat Staf'), :action => 'borang_maklumat_staff', :id => staff
=======
>>>>>>> External Changes


 *= require font-awesome
 *= require bootstrap-theme
 *= require bootstrap-select
 *= require bootstrap-datepicker
 *= require_self
 *= require_tree .
 */

 *= require normalize
 *= require bootstrap-theme
 *= require bootstrap
 *= require menu
 *= require custom
 *= require_self



//= require jquery
//= require jquery.ui.autocomplete
//= require jquery_ujs
//= require bootstrap.min
//= require bootstrap-select
//= require bootstrap-datepicker
//= require bootstrap-switch
//= require mlpushmenu
//= require jsapi
//= require chartkick
//= require nicEdit
//= require classie
//= require_self


$(document).ready(function () {
    //pill tooltips
  $('.tipsy').tooltip({ placement: 'right'});

  $('.btn').tooltip( {placement: 'bottom', container: 'body'});
  $(".bogus").click(function (e) {
      alert("Sorry! Feature not yet implemented");
  });


  $('[data-behaviour=datepicker_today]').datepicker({
    format: "yyyy/mm/dd",
    endDate: "today + 1",
    todayBtn: "linked",
    autoclose: true
  });

  $('[data-behaviour=datetimepicker]').datetimepicker({
    format: "dd MM yyyy - HH:ii P",
    showMeridian: true,
    autoclose: true,
    todayBtn: true
  });

  //Use this for picking only dates in the past
  $('[data-behaviour=datepicker_before]').datepicker({
    format: "yyyy/mm/dd",
    endDate: "today + 1",
    todayBtn: "linked",
    autoclose: true
  });


  //Use this for picking only future dates
  $('[data-behaviour=datepicker_after]').datepicker({
    format: "yyyy/mm/dd",
    startDate: "today",
    autoclose: true,
    todayBtn: true
  });

  $('[data-behaviour=datepicker_std]').datepicker({
    format: "yyyy-mm-dd",
    autoclose: true,
    todayBtn: true
  });

  //Use this for birthdays
  $('[data-behaviour=datepicker_dob]').datepicker({
    format: "yyyy/mm/dd",
    autoclose: true,
    startView: 2
  });

  $(".input-daterange").datepicker({
    todayBtn: "linked",
    todayHighlight: true
  });

  $('.datetimepicker').datetimepicker({pickSeconds: false});


  $('.toga').click(function() {
     $('.search_bar').toggle();
     $('.search_row').toggleClass('hidden');
  });

  $("[id='my_checkbox']").bootstrapSwitch();

  $('#quote-carousel').carousel({
    interval: 10000,
  });
});
