/ - model_class = Examresult
/ .col-md-11
/   %hr
/   = link_to content_tag(:i, "", class: "fa fa-file-pdf-o"), results_exam_examresults_path(id: @examresult.id, format: "pdf"), class: "btn btn-default", "data-toggle" => "tooltip", title: (t 'print')
/   %table.table.table-bordered
/     %head
/       %tr
/         %th{rowspan: 2} No
/         %th{rowspan: 2}=t('student.name')
/         %th{rowspan: 2}=t('student.students.matrixno')
/         %th{rowspan: 2}=t('student.icno')
/         - @subjects = @examresult.retrieve_subject
/         - for subject in @subjects
/           %th.centre{colspan: 2}=h subject.code
/         %th.centre{rowspan: 2}= t 'exam.examresult.total_grade_point2' 
/         %th.centre{rowspan: 2}= t 'exam.examresult.gpa2'
/         %th.centre{rowspan: 2}= t 'exam.examresult.cgpa2'
/         %th.centre{rowspan: 2} Status
/         %th.centre{rowspan: 2}= t 'exam.examresult.remark'
/       %tr
/         - 0.upto(@subjects.count-1) do |count|
/           %th=t('exam.grade.grading_id')
/           %th NG
/     %body
/       - nos=0
/       - @ng=[]
/       - for examresultline in @examresult.resultlines.sort_by{|x|x.status}
/         %tr
/           %td=nos+=1
/           %td.left=h examresultline.student.name 
/           %td.left=h examresultline.student.matrixno
/           %td.left=h examresultline.student.icno
/           - credit2_all=[]
/           - final2_all=[]
/           - final2b_all=[]
/           - ng=[]
/           - ng2=[]
/           - final_marks=[]
/           - repeat_marks=[]
/           - repeated_subjects=[]
/           - @non_ng=0
/           - @value_state=[]
/           - english_subjects=['PTEN', 'NELA', 'NELB', 'NELC', 'MAPE', 'XBRE', 'OTEL'] 
/           - posbasiks = Programme.roots.where(course_type: ['Pos Basik', 'Diploma Lanjutan', 'Pengkhususan']).pluck(:id)
/           - kejururawatan = Programme.roots.where('name ILIKE(?)', '%Kejururawatan%').first.id
/           - perubatan=Programme.where(course_type: 'Diploma').where('name ILIKE (?)', 'Penolong Pegawai Perubatan').first.id
/           - radiografi=Programme.where(course_type: 'Diploma').where('name ILIKE (?)', 'Radiografi').first.id
/           - for subject in @subjects
/             - @grade_student=Grade.where(subject_id: subject.id).where(student_id: examresultline.student_id)
/             - @student_finale=Grade.where('student_id=? and subject_id=?', examresultline.student_id,subject.id).first
/             
/             /retrieve & sum-up Credit Hours for all subject except for English subject (TODO-confirm if elective & minor are of the same case?)
/             /16Dec2015-Pn Manicka Valli - latest - Pos Basics module code - ADCB 510102 - credit=2
/             - unless english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3)) 
/               - credit2_all << subject.code[-1,1].to_i
/             /- if subject.code.size >9
/             /  - unless english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3))
/             /    - credit2_all << subject.code[10,1].to_i 
/             /- elsif subject.code.size < 10
/             /  - unless english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3)) 
/             /    - credit2_all << subject.code[-1,1].to_i
/                 
/             /For NON-English subjects :-
/             - unless english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3))
/               
/               /Final : Retrieve NGs (final2_all)
/               /Repeat : Retrieve NGs+NG2s (final2b_all) & subjects repeated
/               - unless @student_finale.nil? || @student_finale.blank? 
/                 /when grade exist
/                 - unless (@grade_student.first.exam2marks.nil? || @grade_student.first.exam2marks.blank?) 
/                   - if @grade_student.first.resit==true
/                     /Repeat : step1- retrieve latest NG & subject
/                     - final2b_all << @student_finale.set_NG2.to_f
/                     - repeated_subjects << subject.id
/                 - else
/                   - final2_all << @student_finale.set_NG.to_f
/                   /Repeat : step2-collect those not repeated too
/                   - final2b_all << @student_finale.set_NG.to_f
/               - else
/                 /when grade not exist
/                 - final2_all << 0.00
/               
/             /Display subjects results column accordingly-----------------------
/             /Case 1:Grade exist
/             - if @grade_student.count > 0
/               - if english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3))
/                 /English subjects column-start
/                 - @gradeit=@grade_student.first.render_grading[-2,2]
/                 - @non_ng+=1
/                 %td.centre{colspan: 2}
/                   - if ["C-", "D+", "D", "E"].include?(@gradeit.strip)==true
/                     %font{color: "red"}=(t 'exam.examresult.failed')
/                     - @value_state << '4'
/                   - else 
/                     =(t 'exam.examresult.passed')
/                     - @value_state << '3'
/                   //repeat for english papers
/                   - unless (@grade_student.first.exam2marks.nil? || @grade_student.first.exam2marks.blank?)
/                     - if @grade_student.first.resit==true
/                       %br
/                       - @gradeit2=@grade_student.first.render_grading2[-2,2]
/                       - if ["C-", "D+", "D", "E"].include?(@gradeit2.strip)==true
/                         %font{color: "red"}=(t 'exam.examresult.failed')
/                       - else 
/                         =(t 'exam.examresult.passed')  
/                 /English subject column-end
/                 
/               - else
/                 /Other than English subjects 2 columns-start
/                 /Column 1: GRADE
/                 %td.centre
/                   - grade_it=@grade_student.first.render_grading[-2,2]
/                   - if ["C-", "D+", "D", "E"].include?(grade_it.strip)==true
/                     %font{color: "red"}=grade_it
/                   - else
/                     =grade_it
/                   //repeat for non english subject
/                   - unless (@grade_student.first.exam2marks.nil? || @grade_student.first.exam2marks.blank?) 
/                     - if @grade_student.first.resit==true
/                       %br
/                       - grade_it2=@grade_student.first.render_grading2[-2,2] 
/                       - if ["C-", "D+", "D", "E"].include?(grade_it2.strip)==true
/                         %font{color: "red"}=grade_it2
/                       - else
/                         =grade_it2
/                 /Column 2: NG    
/                 %td.centre
/                   - ng_it=@grade_student.first.set_NG.to_f
/                   - if ["C-", "D+", "D", "E"].include?(grade_it.strip)==true
/                     %font{color: "red"}=ng_it 
/                   - else
/                     =ng_it
/                   - ng << ng_it 
/                   - unless (@grade_student.first.exam2marks.nil? || @grade_student.first.exam2marks.blank?) 
/                     - if @grade_student.first.resit==true
/                       - ng_it2=@grade_student.first.set_NG2.to_f
/                       - ng2 << ng_it2
/                       /Retrieve final & repeat marks
/                       - final_marks << @grade_student.first.exam1marks.to_f
/                       - repeat_marks << @grade_student.first.exam2marks.to_f
/                       
/                       %br
/                       - if ["C-", "D+", "D", "E"].include?(grade_it2.strip)==true
/                         %font{color: "red"}=ng_it2 
/                       - else
/                         =ng_it2 
/                 /Other than English subjects 2 columns-end
/                 /Retrieve STATUS for each subject (ALL = English+Non-English)
/                 - @value_state << '4' if (posbasiks+[kejururawatan, perubatan, radiografi]).include?(@examresult.programme_id) && ["C-", "D+", "D", "E"].include?(grade_it.strip)==true
/                 - @value_state << '3' if (posbasiks+[kejururawatan, perubatan, radiografi]).include?(@examresult.programme_id) && ["C-", "D+", "D", "E"].include?(grade_it.strip)==false
/             - else
/               /Case2:Grade Not Exist yet
/               - @value_state << '4'
/               - if english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3))
/                 %td.centre{colspan: 2}= t 'exam.examresult.failed'
/               - else
/                 %td.centre &nbsp;
/                 %td.centre 0.00
/ 
/           /Assign Final NG of all subjects (value doesn't matters, only count will be use in QAP)
/           - @ng << final2b_all
/           
/           /NOTE - start - for checking purpose only
/           /.small Jum Kredit
/           /= credit2_all
/           /%br
/           /.small Result ASAL
/           /=ng
/           /%br
/           /.small Result repeated shj (sebenar)
/           /=final2_all
/           /%br
/           /.small Result repeated shj (highest is C)
/           /=ng2
/           /%br
/           /.small Result TERBARU
/           /= final2b_all
/           /%br 
/           /%br
/           /NOTE - end - for checking purpose only
/           
/           /Calculate (i)NGK (Total Grade Points) - Final & Repeat
/           /Calculate (ii)PNGS (GPA) - Final & Repeat
/           - total_point=number_with_precision(Examresult.total(ng, credit2_all), precision: 2)
/           /- repeated_total_point=number_with_precision(Examresult.total(final2b_all, credit2_all), precision: 2) if final2b_all
/           - repeated_total_point=number_with_precision(Examresult.total(final2b_all, credit2_all), precision: 2) if @value_state.count('4') > 0
/           - if final2_all.count > 0 && credit2_all.count > 0
/             - gpa=number_with_precision((Examresult.total(ng, credit2_all) / credit2_all.sum), precision: 2)
/           - else
/             - gpa=0.00
/           /Repeat : step3 
/           /For Repeat - final2b_all != final2_all
/           - if final2b_all.count > 0 && credit2_all.count > 0 && final2b_all!=final2_all
/             - gpa_repeat=number_with_precision((Examresult.total(final2b_all, credit2_all) / credit2_all.sum), precision: 2)
/           /- else
/           /  - gpa_repeat=0.00
/           
/           /Calculate (iii)PNGK (CGPA)
/           - semno=@examresult.semester.to_i-1
/           - programmeid=@examresult.programme_id
/           - examresult_ids=Examresult.where(programme_id: programmeid).pluck(:id)
/           - @resultlines = Resultline.where(examresult_id: examresult_ids, student_id: examresultline.student_id).order(created_at: :asc)
/           - cgpa=number_with_precision(Examresult.cgpa_per_sem(@resultlines, semno), precision: 2) if @resultlines.count-1>=semno
/           - cgpa_be4_repeat= number_with_precision(Examresult.total(ng, credit2_all) / credit2_all.sum, precision: 2)  
/           %td
/             /2-when FAIL final exam & repeat exam happens
/             - if @value_state.include?('4') && repeated_subjects.count > 0
/               =total_point
/               %br
/             /1-display LATEST status 
/             - if repeated_total_point
/               =repeated_total_point
/             - else
/               = total_point
/           %td
/             /2-when FAIL final exam & repeat exam happens 
/             /Display FINAL here
/             - if @value_state.include?('4') 
/               %font{style: "color: red;"}=gpa
/               %br
/             - else
/               =gpa
/               
/             /1-display LATEST status 
/             //////step4----repeat
/             - if gpa_repeat
/               - if examresultline.status=='4'
/                 %font{style: "color: red; text-decoration: underline"}=gpa_repeat 
/               - else
/                 =gpa_repeat
/               
/             
/           %td
/             /2-when FAIL final exam & repeat exam happens
/             - if @value_state.include?('4') && repeated_subjects.count > 0
/               = cgpa_be4_repeat if cgpa_be4_repeat
/               %br
/             /1-display LATEST status
/             = cgpa if cgpa
/        
/           /Display STATUS
/           - fisioterapi=Programme.where(course_type: 'Diploma').where('name ILIKE (?)', '%Fisioterapi%').first.id
/           - perubatan=Programme.where(course_type: 'Diploma').where('name ILIKE (?)', 'Penolong Pegawai Perubatan').first.id
/           - if [fisioterapi, perubatan].include?(examresultline.examresult.programme_id)
/             - status_viewing=examresultline.render_status_contra
/           - else
/             - status_viewing=examresultline.render_status          
/           %td
/             /2-when FAIL final exam
/             /For Repeat - final2b_all != final2_all
/             - if @value_state.include?('4') && final2b_all!=final2_all
/               /display previous (FAIL) Final exam status as failed
/               %font{style: "color: red;"}=(t 'exam.examresult.failed')
/               %br
/            
/             /1-display LATEST status accordingly (saved status in DB, when repeat result exist: LATEST status shall replaced status of Final exam)
/             - if status_viewing==(t 'exam.examresult.failed')
/               - if final2b_all!=final2_all
/                 /style it as UNDERLINE when latest STATUS is for repeat paper
/                 %font{style: "color: red; text-decoration: underline"}=status_viewing
/               - else
/                 %font{style: "color: red;"}=status_viewing
/             - else
/               %font{style: "color: black;"}=status_viewing
/           
/           /Display REMARK
/           %td
/             /=h examresultline.render_remark
/             
/             /Display Ulang Subjek...when NG2 exist (repeat marks exist)
/             - if @value_state.uniq.include?('4') && repeated_subjects.count > 0
/               %font{style: "color: red;"}
/                 =(DropDown::RESULT_REMARK.find_all{|disp, value| value == "1"}).map {|disp, value| disp}[0]
/                 - Programme.where(id: repeated_subjects).each do |subject|
/                   .small=subject.code.gsub(" ", "")
/ 
/             /Display LATEST REMARK accordingly
/             /NOTE - examresultline.remark & examresultline.render_remark - refers to LATEST saved remark in DB
/             
/             - if examresultline.remark=='1' 
/               /display 'Ulang Subjek' je if remarked as one (repeat marks not exist yet)
/               %font{style: "color: red;"}=h examresultline.render_remark
/               /display repeated subjects here
/               /NOTE-based on RESIT checkbox in Grade
/               /- Programme.where(id: repeated_subjects).each do |subject|
/               /  .small=subject.code.gsub(" ", "")
/               
/             - elsif examresultline.remark=='2'
/               /Display VIVA - NOTE - definitely status for REPEAT paper 
/               %font{style: "color: red; text-decoration: underline;"}=h examresultline.render_remark
/               /display repeated subject (still fail) for VIVA - but Repeat marks > Final marks
/               - ng2.each_with_index do |nn, ind|
/                 - if nn < 2.0
/                   - if repeat_marks[ind] > final_marks[ind]
/                     %font{style: "color: red;"}
/                       .small=Programme.where(id: repeated_subjects)[ind].code.gsub(" ", "")
/                       
/             - else
/               /Display Remark other than 'Ulang Subjek' & 'VIVA'
/               - if examresultline.remark=="4"
/                 /naik semester
/                 =h examresultline.render_remark
/               - else
/                 /ulang semester 
/                 %font{style: "color: red; text-decoration: underline;"}=h examresultline.render_remark
/               
/               
