- model_class = Exam
.col-md-8.col-md-offset-1
  %dl.dl-horizontal
    %dt= t 'exam.exams.name' , :default => model_class.human_attribute_name(:name) + ":"
    %dd= h (DropDown::EXAMTYPE.find_all{|disp, value| value == @exam.name}).map {|disp, value| disp}[0] 

    %dt= t 'exam.exams.year_semester'
    %dd= h @exam.subject_id? ? (t 'exam.exams.year')+@year.to_s + (t 'exam.exams.semester')+@exam.subject.parent.code.to_s : "" 

    - if @exam.name=='R'
      %dt=  t 'exam.exams.description', :default => model_class.human_attribute_name(:description) + ":"
      %dd= link_to(Exam.where(id: @exam.description.to_i).first.subject_date, exam_exam_path(Exam.where(id: @exam.description.to_i).first.id))
      
    - else
      %dt= t 'exam.exams.course_id' , :default => model_class.human_attribute_name(:course_id) + ":"
      %dd=h @exam.subject_id? ? @exam.subject.root.course_type+" "+@exam.subject.root.programme_list : "" 
  
      %dt= t 'exam.exams.subject_id' , :default => model_class.human_attribute_name(:subject_id) + ":"
      %dd=h @exam.subject_id? ? @exam.subject.subject_list : ""
      
      - unless @exam.valid_for_removal
        - repeat_exams=Exam.where(name: "R")
        - repeat_exams.each do |x|
          - @repeat=x.id if @exam.id==x.description.to_i 
        %dt=t 'exam.exams.repeat_exam'
        %dd=link_to(Exam.where(id: @repeat).first.subject_date, exam_exam_path(Exam.where(id: @repeat).first.id))

    %dt= t 'exam.exams.created_by' , :default => model_class.human_attribute_name(:created_by) + ":"
    %dd=h @exam.creator_details 

    %dt= t 'exam.exams.exam_on' , :default => model_class.human_attribute_name(:exam_on) + ":exam_on"
    %dd=h @exam.exam_on.try(:strftime, '%d %b %Y')

    %dt= t 'exam.exams.time' , :default => model_class.human_attribute_name(:starttime) + ":starttime"
    %dd=h @exam.timing
     
    %dt= t 'exam.exams.duration'
    %dd
      - if @exam.duration!=nil
        =h (@exam.duration/60).to_i.to_s+" hours "+(@exam.duration%60).to_i.to_s+" mins"
      - else
        =h (((@exam.endtime - @exam.starttime)/60) / 60).to_i.to_s+" hours "+(((@exam.endtime - @exam.starttime)/60) % 60).to_i.to_s+" minutes"

    %dt= t 'exam.exams.full_marks', :default => model_class.human_attribute_name(:total_marks) + ":full_marks"
    %dd= h @exam.topic_id.blank? ? "Template "+(t 'exam.exams.template_not_selected') : number_with_precision(@exam.exam_template.template_full_marks, precision: 2)