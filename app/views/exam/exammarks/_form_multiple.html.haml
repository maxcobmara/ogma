/.row
/  .col-md-offset-2
/    .form-group
/      .col-sm-2.control-label
/        %b= t 'exam.exammark.title'
/      .col-md-6
/        = text_field_tag "exammark_ids[]", 7, class: 'form-control'
/.row
/  .col-md-offset-2
/    .form-group
/      .col-sm-2.control-label
/        %b= t 'exam.exammark.title'
/      .col-md-6
/        = text_field_tag "exammark_ids[]", 7, class: 'form-control'
           
/retrieve data first
- @examid = @exammarks[0].exam_id 
- exam_template=Exam.find(@examid).exam_template
- qcount=[]
- qrate=[]
- qmarks_ea=[]
- exam_template.question_count.each do |k,v|
  - qcount << v["count"].to_i
  - if v["weight"]!='' && v["count"]!=''
    - if v["full_marks"] && v["full_marks"]!='' 
      - qrate << v["weight"].to_f / v["full_marks"].to_f
      - qmarks_ea << v["full_marks"].to_f / v["count"].to_i
    - else
      //when full marks not exist, use STANDARD MARKS as below : pls note - applicable to MCQ, MEQ & SEQ only
      - if k=="mcq"
        - qrate << v["weight"].to_f / v["count"].to_i*1 
        - qmarks_ea << 1 
        /- elsif k=="seq" || k=="ospe"
      - elsif k=="seq" 
        - qrate << v["weight"].to_f / (v["count"].to_i*10)
        - qmarks_ea << 10
      - elsif k=="meq"
        - qrate << v["weight"].to_f / (v["count"].to_i*20)
        - qmarks_ea << 20
      - else
        /assume 1 for marks for ea question
        - qrate << v["weight"].to_f / v["count"].to_i
        - qmarks_ea << 1 
  - elsif  v["weight"]=='' && v["count"]!=''
    //when weightage not exist, but count exist
    - qrate << 0
    - if k=="mcq"
      - qmarks_ea << 1 
    - elsif k=="seq"
      - qmarks_ea << 10
    - elsif k=="meq"
      - qmarks_ea << 20
    - else
      /assume 1 for marks for ea question
      - qmarks_ea << 1
  - else
    - qrate << 0
    - qmarks_ea << 1 

- @mcqcount= qcount[0]
- @mcqweight_rate= qrate[0]
- @meqcount= qcount[1]
- @meqweight_rate=qrate[1]
- @seqcount=qcount[2]
- @seqweight_rate=qrate[2]
  
- @acqcount=qcount[3]
- @acqweight_rate=qrate[3]
- @oscicount=qcount[4]
- @osciweight_rate=qrate[4]
- @osciicount=qcount[5]
- @osciiweight_rate=qrate[5]
- @oscecount=qcount[6]
- @osceweight_rate=qrate[6]
- @ospecount=qcount[7]
- @ospeweight_rate=qrate[7]
- @vivacount=qcount[8]
- @vivaweight_rate=qrate[8]
- @truefalsecount=qcount[9]
- @truefalseweight_rate=qrate[9]

/=qmarks_ea
/=qcount
/=qrate

- @allcount= @mcqcount+@meqcount+@seqcount+@acqcount+@oscicount+@osciicount+@oscecount+@ospecount+@vivacount+@truefalsecount
- @fullmarks = Exam.find(@examid).exam_template.template_full_marks
- @b_count=0
- @diff_total_mcq=0
- if current_user.college.code=="kskbjb"
  - diploma=Programme.where(course_type: 'Diploma')
  - radiografi=diploma.where('name ILIKE?', '%Radiografi%').first.id
  - carakerja=diploma.where('name ILIKE?', '%Jurupulih Perubatan Cara Kerja%').first.id

.row
  %table.table
    %thead
      %tr
        %th No
        %th=t 'exam.exammark.student_id'
        %th=t 'student.icno'
        - if @exampaper_of_exammarks==1 
        - else
          %th Examination
        %th.centre
          =t 'exam.exammark.total_mcq'
          .small="/"+(@mcqcount*1).to_s
        - if @meqcount
          - 1.upto(@meqcount) do |count|
            %th.centre 
              MEQ
              %br="Q-"+count.to_s
              .small /20
        - if @seqcount
          - 1.upto(@seqcount) do |count|
            %th.centre 
              SEQ
              %br="Q-"+count.to_s
              .small /10
        - if @acqcount
          - 1.upto(@acqcount) do |count|
            %th.centre 
              ACQ
              %br="Q-"+count.to_s
        - if @oscicount
          - 1.upto(@oscicount) do |count|
            %th.centre 
              OSCI
              %br="Q-"+count.to_s
        - if @osciicount
          - 1.upto(@osciicount) do |count|
            %th.centre 
              OSCII
              %br="Q-"+count.to_s
        - if @oscecount 
          - 1.upto(@oscecount) do |count|
            %th.centre 
              OSCE
              %br="Q-"+count.to_s
        - if @ospecount 
          - 1.upto(@ospecount) do |count|
            %th.centre 
              OSPE
              %br="Q-"+count.to_s
        - if @vivacount 
          - 1.upto(@vivacount) do |count|
            %th.centre 
              VIVA
              %br="Q-"+count.to_s
        - if @truefalsecount
          - 1.upto(@truefalsecount) do |count|
            %th.centre
              =t 'exam.exammark.true_false1'
              %br="Q-"+count.to_s
        
        ///Columns heading
        - if (@exammarks[0].exampaper.subject.root_id==radiografi || @exammarks[0].exampaper.subject.root_id==carakerja)
          /display for Radiografi & Cara Kerja only
          /entered total marks
          %th.centre
            =t 'exam.exammark.total'
            %font{:style=>"size:-2;"}="("+(number_with_precision(@fullmarks, precision: 2)).to_s+")"
          /total marks in 100%
          %th.centre 
            &nbsp;&nbsp;&nbsp;&nbsp;100%&nbsp;&nbsp;&nbsp;&nbsp;
        
        /Display for both groups
        %th.centre
          =t 'exam.exammark.summative'
          - if @exammarks[0].exampaper.exam_template.total_in_weight==0
            /weightage in exam_template - not exist
            - sumweightage=@exammarks[0].total_weightage
          - else
            - sumweightage=@exammarks[0].exampaper.exam_template.total_in_weight
          ="("+sumweightage.to_s+" %)"
        ///
        
        /HIDE - just to avoid confusion (same value as summative, coz data already in weightage - but MCQ, SEQ- marks by WEIGHTAGE still PENDING)
        /- if @exammarks[0].exampaper.subject.root_id==radiografi || @exammarks[0].exampaper.subject.root_id==carakerja
        /  %th.centre
        /    /#error_display_total{:style => "display: none;"}
        /    /  %font{color: "red"}*
        /    =t 'exam.exammark.total'
        /    %font{:style=>"size:-2;"}="("+(number_with_precision(@fullmarks, precision: 2)).to_s+")"
        /hide end
        /- if @exammarks[0].exampaper.name=='F'
        /  - if @exammarks[0].exampaper.subject.root_id==radiografi || @exammarks[0].exampaper.subject.root_id==carakerja
        /    %th.centre 
        /      /#error_display{:style => "display: none;"}
        /      /  %font{color: "red"}*
        /      &nbsp;&nbsp;&nbsp;&nbsp;100%&nbsp;&nbsp;&nbsp;&nbsp;
              
        /  %th.centre
        /    /#error_display_70{:style => "display: none;"}
        /    /  %font{color: "red"}*
        /    =t 'exam.exammark.summative'
        /    //
        /    - if @exammarks[0].exampaper.exam_template.total_in_weight==0
        /      /weightage in exam_template - not exist
        /      - sumweightage=@exammarks[0].total_weightage
        /    - else
        /      - sumweightage=@exammarks[0].exampaper.exam_template.total_in_weight
        /    ="("+sumweightage.to_s+" %)"
        /    //
        /    /- if @exammarks[0].exampaper.exam_template.total_in_weight==0
        /    /  /weightage in exam_template - not exist
        /    /  ="("+@exammarks[0].total_weightage.to_s+" %)"
        /    /- else
        /    /  ="("+@exammarks[0].exampaper.exam_template.total_in_weight.to_s+" %)"
        /- else
        /  %th
        /    /#error_display_total{:style => "display: none;"}
        /    /  %font{color: "red"}*
        /    =t 'exam.exammark.total'

    %tbody
      - @exammarks.sort_by{|x|x.studentmark.name}.each_with_index do |exammark,no|
        = hidden_field_tag "exammark_ids[]", exammark.id
        %tr{:style=>"background-color:#EFE;"}
          %td=no+1
          %td=h exammark.studentmark.matrix_name   
          %td=h exammark.studentmark.icno
          - if @exampaper_of_exammarks==1
          - else
            %td=h exammark.exampaper.subject_date
          - if @edit_type == "Edit Checked" || @edit_type.nil? 
          - elsif @edit_type == "Edit by Subject" 
            = hidden_field_tag "exam_ids[]", @exam_id 
          %td.centre= text_field_tag "total_mcqs[]", exammark.total_mcq.to_i,:id=>"total"+@b_count.to_s, :size=> 4,:class=>'j1' 
          - aaa=exammark.marks 
          - @a_count=0
          - aaa.sort_by{|x|x.created_at}.each_with_index do |aa, index|
            %td.centre
              = text_field_tag "marks_attributes[#{index}][student_marks][]", number_with_precision(aa.student_mark,:precision=>2),:id=>"student_mark_"+"#{@b_count}"+"_"+@a_count.to_s,:class=>'j1', :size=> 4 
              - @a_count+=1

          /- if @exammarks[0].exampaper.name=='F'
          /HIDE - just to avoid confusion (same value as summative, coz data already in weightage - but MCQ, SEQ- marks by WEIGHTAGE still PENDING)
          /- if @exammarks[0].exampaper.subject.root_id==radiografi || @exammarks[0].exampaper.subject.root_id==carakerja
          
          ////////Columns data
          - if exammark.exampaper.exam_template.total_in_weight==0
            /weight not exist
            - sumweightage=exammark.total_weightage
          - else
            - sumweightage=exammark.exampaper.exam_template.total_in_weight
            
          - if (@exammarks[0].exampaper.subject.root_id==radiografi || @exammarks[0].exampaper.subject.root_id==carakerja)
            /Display these 2 columns for Radiografi & Cara Kerja Only
            /entered total marks
            %td.centre{:style=>"background-color:#C3E9BF;"}
              = text_field_tag "total_marks_view[]", number_with_precision(exammark.total_marks, precision:2) ,:id=>"total_marks_view"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'
            /total in 100
            %td.centre{:style=>"background-color:#C3E9BF;"}
              = text_field_tag "marks_in_hundred[]", number_with_precision((exammark.total_marks/@fullmarks)*100, precision: 2), :id=>"marks_in_hundred"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'
          - else
            /Still these 2 columns added to make sure it works, but no need to display
            = hidden_field_tag "total_marks_view[]", number_with_precision(exammark.total_marks, precision:2) ,:id=>"total_marks_view"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'
            = hidden_field_tag "marks_in_hundred[]", number_with_precision((exammark.total_marks/@fullmarks)*100, precision: 2), :id=>"marks_in_hundred"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'

          /Both groups - total in 70 (summative)
          %td.centre{:style=>"background-color:#C3E9BF;"}
            = text_field_tag "total_summative[]", number_with_precision(exammark.totalsummative, precision: 2) ,:id=>"total_summative"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'
          ////////
          
          /- if !(@exammarks[0].exampaper.subject.root_id==radiografi || @exammarks[0].exampaper.subject.root_id==carakerja) && (@exammarks[0].exampaper.name=='F' || @exammarks[0].exampaper.name=='R')
          /  = hidden_field_tag "total_marks_view[]", number_with_precision(exammark.total_marks,precision:2) ,:id=>"total_marks_view"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'
          /  - if exammark.exampaper.exam_template.total_in_weight==0
          /    /weight not exist
          /    - sumweightage=exammark.total_weightage
          /    /- sumweightage=exammark.exampaper.total_marks
          /  - else
          /    - sumweightage=exammark.exampaper.exam_template.total_in_weight
          /- else
          /  %td.centre{:style=>"background-color:#C3E9BF;"}
          /    /ssiiinnnii - mid sem+other than radiografi & cara kerja
          /    / NOTE Mid Sem : Total Marks (1)displayed in Weightage %, when weightage exist (2)displayed by 'SAVEd ENTERED values', when weightage not present
          /    /but for values checking purposes - sumweightage must be supplied with : (1) paper's Full_marks(exam.total_marks) if weightage ==0
          /    /(2) total_in_weight if weightage > 0 [remarks : exam.total_marks <> exammark.total_marks]
          /    - if exammark.exampaper.exam_template.total_in_weight==0
          /      /weight not exist
          /      - sumweightage=exammark.total_weightage
          /      /- sumweightage=exammark.exampaper.total_marks
          /    - else
          /      - sumweightage=exammark.exampaper.exam_template.total_in_weight
              
          /    /= text_field_tag "total_marks_view[]", number_with_precision(exammark.total_marks,precision:2) ,:id=>"total_marks_view"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'
          /    = text_field_tag "total_marks_view[]", number_with_precision(exammark.total_marks, precision:2) ,:id=>"total_marks_view"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'

          /hide end
          /- if (@exammarks[0].exampaper.subject.root_id==radiografi || @exammarks[0].exampaper.subject.root_id==carakerja) && (@exammarks[0].exampaper.name=='F'|| @exammarks[0].exampaper.name=='R')            
          /  %td.centre{:style=>"background-color:#C3E9BF;"}
          /    /sinipun
          /    = text_field_tag "marks_in_hundred[]", number_with_precision((exammark.total_marks/Exammark.fullmarks(@examid))*100, precision: 2), :id=>"marks_in_hundred"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'
          
          /- else
          /  %td{:style=>"background-color:#C3E9BF;"}= text_field_tag "total_marks_view[]", number_with_precision(exammark.total_marks,precision:2) ,:id=>"total_marks_view"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'
          /- if @exammarks[0].exampaper.name=='F' || @exammarks[0].exampaper.name=='R'
          /  %td.centre{:style=>"background-color:#C3E9BF;"}
          /    /sinika
          /    /=@mcqweight_rate
          /    = text_field_tag "total_summative[]", number_with_precision(exammark.totalsummative, precision: 2) ,:id=>"total_summative"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'
          /- else
          /  /TEMPORARY - ADD THIS JUST TO MAKE SURE total_marks_view display correctly, or only first student/line works for Repeat Papers(NGYN-Kejururawatan)-8Dec15
          /  = hidden_field_tag "total_summative[]", number_with_precision(exammark.totalsummative, precision: 2) ,:id=>"total_summative"+@b_count.to_s, :size=> 5, :readonly=>true, :class => 'form-control'
         
         
          - @b_count+=1
          
/TRIAL  
=hidden_field_tag "mcqweight_rate", @mcqweight_rate
=hidden_field_tag "seqweight_rate", @seqweight_rate
=hidden_field_tag "meqweight_rate", @meqweight_rate
=hidden_field_tag "acqweight_rate", @acqweight_rate
=hidden_field_tag "osciweight_rate", @osciweight_rate
=hidden_field_tag "osciiweight_rate", @osciiweight_rate
=hidden_field_tag "osceweight_rate", @osceweight_rate
=hidden_field_tag "ospeweight_rate", @ospeweight_rate
=hidden_field_tag "vivaweight_rate", @vivaweight_rate
=hidden_field_tag "truefalseweight_rate", @truefalseweight_rate
=hidden_field_tag "exammark[trial2]", @mcqcount
=hidden_field_tag "seqcount", @seqcount
=hidden_field_tag "meqcount", @meqcount
=hidden_field_tag "acqcount", @acqcount
=hidden_field_tag "oscicount", @oscicount
=hidden_field_tag "osciicount", @osciicount
=hidden_field_tag "oscecount", @oscecount
=hidden_field_tag "ospecount", @ospecount
=hidden_field_tag "vivacount", @vivacount
=hidden_field_tag "truefalsecount", @truefalsecount

=hidden_field_tag "mcq_marks", qmarks_ea[0]
=hidden_field_tag "meq_marks", qmarks_ea[1]
=hidden_field_tag "seq_marks", qmarks_ea[2]
=hidden_field_tag "acq_marks", qmarks_ea[3]
=hidden_field_tag "osci_marks", qmarks_ea[4]
=hidden_field_tag "oscii_marks", qmarks_ea[5]
=hidden_field_tag "osce_marks", qmarks_ea[6]
=hidden_field_tag "ospe_marks", qmarks_ea[7]
=hidden_field_tag "viva_marks", qmarks_ea[8]
=hidden_field_tag "truefalse_marks", qmarks_ea[9]

=hidden_field_tag "exammark[trial1]", @exammarks.count
=hidden_field_tag "exammark[trial3]", @allcount
=hidden_field_tag "exammark[trial4]", @fullmarks
=hidden_field_tag "programme_name", Programme.where(id: @exammarks[0].exampaper.subject.root_id).first.name
=hidden_field_tag "sum_weightage", sumweightage

/#error_display_remark{:style => "display: none;"}
/  %font{color: "red"}* 
/  =t 'exam.exammark.error_remark'
%BR

:javascript

$(document).ready(function(){
  $(".j1").keyup(function() {  
    
    var mcqweight_rate= document.getElementById("mcqweight_rate").value;
    var seqweight_rate= document.getElementById("seqweight_rate").value;
    var meqweight_rate= document.getElementById("meqweight_rate").value;
    var acqweight_rate= document.getElementById("acqweight_rate").value;
    var osciweight_rate= document.getElementById("osciweight_rate").value;
    var osciiweight_rate= document.getElementById("osciiweight_rate").value;
    var osceweight_rate= document.getElementById("osceweight_rate").value;
    var ospeweight_rate= document.getElementById("ospeweight_rate").value;
    var vivaweight_rate= document.getElementById("vivaweight_rate").value;
    var truefalseweight_rate= document.getElementById("truefalseweight_rate").value;
    var seq_count= document.getElementById("seqcount").value;
    var meq_count= document.getElementById("meqcount").value;
    var acq_count= document.getElementById("acqcount").value;
    var osci_count= document.getElementById("oscicount").value;
    var oscii_count= document.getElementById("osciicount").value;
    var osce_count= document.getElementById("oscecount").value;
    var ospe_count= document.getElementById("ospecount").value;
    var viva_count= document.getElementById("vivacount").value;
    var truefalse_count= document.getElementById("truefalsecount").value;
    var studentcount =document.getElementById("exammark_trial1").value;
    var mcqcount = $("#exammark_trial2").val();
    var allcount = $("#exammark_trial3").val();
    var fullmarks = $("#exammark_trial4").val();
    var programme = $("#programme_name").val();
    var total_weight= $("#sum_weightage").val();
    
    var mcqmarks = document.getElementById("mcq_marks").value;
    var meqmarks = document.getElementById("meq_marks").value;
    var seqmarks = document.getElementById("seq_marks").value;
    var acqmarks = document.getElementById("acq_marks").value;
    var oscimarks = document.getElementById("osci_marks").value;
    var osciimarks = document.getElementById("oscii_marks").value;
    var oscemarks = document.getElementById("osce_marks").value;
    var ospemarks = document.getElementById("ospe_marks").value;
    var vivamarks = document.getElementById("viva_marks").value;
    var truefalsemarks = document.getElementById("truefalse_marks").value;
    
    for (var i=0;i<studentcount;i++)
    {
      
      var total_mcq = document.getElementById("total"+i).value;
      window["totalmarksview"+i]= document.getElementById("total_marks_view"+i);
      window["totalsummative"+i]= document.getElementById("total_summative"+i);
      window["marksinhundred"+i]= document.getElementById("marks_in_hundred"+i);
      
      /* MCQ question field - change to red when exceed maximum value*/
      window["mcq_field"+i] = document.getElementById("total"+i);
      if (window["mcq_field"+i].value > mcqcount*1.00 )
      {  window["mcq_field"+i].style.color="red";}
      else
      {  window["mcq_field"+i].style.color="black";}
      
      var a = 0;
      nonmcq_entered_marks=0;
      for (var k=0;k<allcount-mcqcount;k++)
      {
        var other = document.getElementById("student_mark_"+i+"_"+k).value;
        
        /* step1-Individual question fields - change to red when exceed maximum value*/
        window["other_field_"+i+"_"+k] = document.getElementById("student_mark_"+i+"_"+k);
      
        meq_count2=meq_count;
        seq_count2=meq_count2*1+seq_count*1 /*meq_count2+seq_count;*/
        acq_count2=seq_count2*1+acq_count*1;
        osci_count2=acq_count2*1+osci_count*1;
        oscii_count2=osci_count2*1+oscii_count*1;
        osce_count2=oscii_count2*1+osce_count*1;
        ospe_count2=osce_count2*1+ospe_count*1;
        viva_count2=ospe_count2*1+viva_count*1;
        truefalse_count2=viva_count2*1+truefalse_count*1;
       
        if (k < meq_count2)
       {  
          rate=meqweight_rate;
          marks_each=meqmarks;
        }
        else 
        {
          if ((k >= meq_count2) && (k < seq_count2)) /*seq_count2 = 22*/
          { 
            rate=seqweight_rate;
            marks_each=seqmarks;
            
          }
          else if ((k >= seq_count2) && (k < acq_count2))
          { 
            rate=acqweight_rate;
            marks_each=acqmarks;
          }
          else if ((k >= acq_count2) && (k < osci_count2))
          {
            rate=osciweight_rate;
            marks_each=oscimarks;
          }
          else if ((k >= osci_count2) && (k < oscii_count2))
          { 
            rate=osciiweight_rate;
            marks_each=osciimarks;
          }
          else if ((k >= oscii_count2) && (k < osce_count2))
          { 
            rate=osceweight_rate;
            marks_each=oscemarks;
          }
          else if ((k >= osce_count2) && (k < ospe_count2))
          { 
            rate=ospeweight_rate;
            marks_each=ospemarks;
          }
          else if ((k >= ospe_count2) && (k < viva_count2))
          { 
            rate=vivaweight_rate;
            marks_each=vivamarks;
          }
          else if ((k >= viva_count2) && (k < truefalse_count2))
          { 
            rate=truefalseweight_rate;
            marks_each=truefalsemarks;
          }
        }
       
        if (rate!='0')
        {  a=a*1+(other*rate);}
        else
        {  a=a*1+(other*1);}
        
        if (window["other_field_"+i+"_"+k].value > marks_each*1.0)
        {  window["other_field_"+i+"_"+k].style.color = "red";}
        else
        {  window["other_field_"+i+"_"+k].style.color = "black";}
      
        nonmcq_entered_marks=nonmcq_entered_marks*1+other*1;
      }
      
      if (mcqweight_rate!='0')
      {aaa=(total_mcq*mcqweight_rate+a);}
      else
      {aaa=(total_mcq*1+a)/fullmarks*total_weight*1.0;}
      
      window["totalmarksview"+i].value = (total_mcq*1+nonmcq_entered_marks);
      window["totalsummative"+i].value=aaa;
      /* Below (marksinhundred) : applicable to ALL programme but only DISPLAY for Radiografi & Cara Kerja */
      window["marksinhundred"+i].value=(total_mcq*1+nonmcq_entered_marks) / fullmarks*100;
      
      if ((total_mcq*1+nonmcq_entered_marks) > fullmarks*1.0)
      {
        window["totalmarksview"+i].style.color="red";
        window["totalsummative"+i].style.color="red";
        window["marksinhundred"+i].style.color="red";
      }
      else
      {
        window["totalmarksview"+i].style.color="black";
        window["totalsummative"+i].style.color="black";
        window["marksinhundred"+i].style.color="black";
      }
      
    }
    
  });
  
  $(".j1").each(function() {  
    
    var mcqweight_rate= document.getElementById("mcqweight_rate").value;
    var seqweight_rate= document.getElementById("seqweight_rate").value;
    var meqweight_rate= document.getElementById("meqweight_rate").value;
    var acqweight_rate= document.getElementById("acqweight_rate").value;
    var osciweight_rate= document.getElementById("osciweight_rate").value;
    var osciiweight_rate= document.getElementById("osciiweight_rate").value;
    var osceweight_rate= document.getElementById("osceweight_rate").value;
    var ospeweight_rate= document.getElementById("ospeweight_rate").value;
    var vivaweight_rate= document.getElementById("vivaweight_rate").value;
    var truefalseweight_rate= document.getElementById("truefalseweight_rate").value;
    var seq_count= document.getElementById("seqcount").value;
    var meq_count= document.getElementById("meqcount").value;
    var acq_count= document.getElementById("acqcount").value;
    var osci_count= document.getElementById("oscicount").value;
    var oscii_count= document.getElementById("osciicount").value;
    var osce_count= document.getElementById("oscecount").value;
    var ospe_count= document.getElementById("ospecount").value;
    var viva_count= document.getElementById("vivacount").value;
    var truefalse_count= document.getElementById("truefalsecount").value;
    var studentcount =document.getElementById("exammark_trial1").value;
    var mcqcount = $("#exammark_trial2").val();
    var allcount = $("#exammark_trial3").val();
    var fullmarks = $("#exammark_trial4").val();
    var programme = $("#programme_name").val();
    var total_weight= $("#sum_weightage").val();
    
    var mcqmarks = document.getElementById("mcq_marks").value;
    var meqmarks = document.getElementById("meq_marks").value;
    var seqmarks = document.getElementById("seq_marks").value;
    var acqmarks = document.getElementById("acq_marks").value;
    var oscimarks = document.getElementById("osci_marks").value;
    var osciimarks = document.getElementById("oscii_marks").value;
    var oscemarks = document.getElementById("osce_marks").value;
    var ospemarks = document.getElementById("ospe_marks").value;
    var vivamarks = document.getElementById("viva_marks").value;
    var truefalsemarks = document.getElementById("truefalse_marks").value;
    
    for (var i=0;i<studentcount;i++)
    {
      
      var total_mcq = document.getElementById("total"+i).value;
      window["totalmarksview"+i]= document.getElementById("total_marks_view"+i);
      window["totalsummative"+i]= document.getElementById("total_summative"+i);
      window["marksinhundred"+i]= document.getElementById("marks_in_hundred"+i);
      
      /* MCQ question field - change to red when exceed maximum value*/
      window["mcq_field"+i] = document.getElementById("total"+i);
      if (window["mcq_field"+i].value > mcqcount*1.00 )
      {  window["mcq_field"+i].style.color="red";}
      else
      {  window["mcq_field"+i].style.color="black";}
      
      var a = 0;
      nonmcq_entered_marks=0;
      for (var k=0;k<allcount-mcqcount;k++)
      {
        var other = document.getElementById("student_mark_"+i+"_"+k).value;
        
        /* step1-Individual question fields - change to red when exceed maximum value*/
        window["other_field_"+i+"_"+k] = document.getElementById("student_mark_"+i+"_"+k);
      
        meq_count2=meq_count;
        seq_count2=meq_count2*1+seq_count*1 /*meq_count2+seq_count;*/
        acq_count2=seq_count2*1+acq_count*1;
        osci_count2=acq_count2*1+osci_count*1;
        oscii_count2=osci_count2*1+oscii_count*1;
        osce_count2=oscii_count2*1+osce_count*1;
        ospe_count2=osce_count2*1+ospe_count*1;
        viva_count2=ospe_count2*1+viva_count*1;
        truefalse_count2=viva_count2*1+truefalse_count*1;
       
        if (k < meq_count2)
       {  
          rate=meqweight_rate;
          marks_each=meqmarks;
        }
        else 
        {
          if ((k >= meq_count2) && (k < seq_count2))
          { 
            rate=seqweight_rate;
            marks_each=seqmarks;
          }
          else if ((k >= seq_count2) && (k < acq_count2))
          { 
            rate=acqweight_rate;
            marks_each=acqmarks;
          }
          else if ((k >= acq_count2) && (k < osci_count2))
          {
            rate=osciweight_rate;
            marks_each=oscimarks;
          }
          else if ((k >= osci_count2) && (k < oscii_count2))
          { 
            rate=osciiweight_rate;
            marks_each=osciimarks;
          }
          else if ((k >= oscii_count2) && (k < osce_count2))
          { 
            rate=osceweight_rate;
            marks_each=oscemarks;
          }
          else if ((k >= osce_count2) && (k < ospe_count2))
          { 
            rate=ospeweight_rate;
            marks_each=ospemarks;
          }
          else if ((k >= ospe_count2) && (k < viva_count2))
          { 
            rate=vivaweight_rate;
            marks_each=vivamarks;
          }
          else if ((k >= viva_count2) && (k < truefalse_count2))
          { 
            rate=truefalseweight_rate;
            marks_each=truefalsemarks;
          }
        }
       
        if (rate!='0')
        {  a=a*1+(other*rate);}
        else
        {  a=a*1+(other*1);}
        
        if (window["other_field_"+i+"_"+k].value > marks_each*1.0)
        {  window["other_field_"+i+"_"+k].style.color = "red";}
        else
        {  window["other_field_"+i+"_"+k].style.color = "black";}
        
        nonmcq_entered_marks=nonmcq_entered_marks*1+other*1;
      }
      
      if (mcqweight_rate!='0')
      {aaa=(total_mcq*mcqweight_rate+a)}
      else
      {aaa=(total_mcq*1+a)/fullmarks*total_weight*1.0;}
      
      window["totalmarksview"+i].value = (total_mcq*1+nonmcq_entered_marks);
      window["totalsummative"+i].value=aaa;
      /* Below (marksinhundred) : applicable to ALL programme but only DISPLAY for Radiografi & Cara Kerja */
      window["marksinhundred"+i].value=(total_mcq*1+nonmcq_entered_marks) / fullmarks*100;
      
      if ((total_mcq*1+nonmcq_entered_marks) > fullmarks*1.0)
      {
        window["totalmarksview"+i].style.color="red";
        window["totalsummative"+i].style.color="red";
        window["marksinhundred"+i].style.color="red";
      }
      else
      {
        window["totalmarksview"+i].style.color="black";
        window["totalsummative"+i].style.color="black";
        window["marksinhundred"+i].style.color="black";
      }
      
    }
    
  });
});